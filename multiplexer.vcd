$date
	Fri Sep 21 09:59:06 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module behavioralMultiplexer $end
$var wire 1 ! address0 $end
$var wire 1 " address1 $end
$var wire 1 # in0 $end
$var wire 1 $ in1 $end
$var wire 1 % in2 $end
$var wire 1 & in3 $end
$var wire 1 ' out $end
$var wire 4 ( inputs [3:0] $end
$var wire 2 ) address [1:0] $end
$upscope $end
$scope module testMultiplexer $end
$var wire 1 * x0 $end
$var wire 1 + x1 $end
$var wire 1 , x2 $end
$var wire 1 - x3 $end
$var wire 1 . out $end
$var wire 1 / naddress1 $end
$var wire 1 0 naddress0 $end
$var wire 1 1 nA0andnA1 $end
$var wire 1 2 nA0andA1 $end
$var wire 1 3 A0andnA1 $end
$var wire 1 4 A0andA1 $end
$var reg 1 5 address0 $end
$var reg 1 6 address1 $end
$var reg 1 7 in0 $end
$var reg 1 8 in1 $end
$var reg 1 9 in2 $end
$var reg 1 : in3 $end
$scope module dut $end
$var wire 1 4 A0andA1 $end
$var wire 1 3 A0andnA1 $end
$var wire 1 5 address0 $end
$var wire 1 6 address1 $end
$var wire 1 7 in0 $end
$var wire 1 8 in1 $end
$var wire 1 9 in2 $end
$var wire 1 : in3 $end
$var wire 1 2 nA0andA1 $end
$var wire 1 1 nA0andnA1 $end
$var wire 1 0 naddress0 $end
$var wire 1 / naddress1 $end
$var wire 1 . out $end
$var wire 1 * x0 $end
$var wire 1 + x1 $end
$var wire 1 , x2 $end
$var wire 1 - x3 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0:
09
08
07
06
05
04
03
02
01
10
1/
0.
z-
z,
z+
z*
bz )
bz (
x'
z&
z%
z$
z#
z"
z!
$end
#1000000
1.
11
17
#2000000
0.
01
18
07
#3000000
19
08
#4000000
1:
09
#5000000
0.
00
01
15
0:
17
#6000000
1.
13
18
07
#7000000
0.
03
19
08
#8000000
1:
09
#9000000
0/
10
16
05
0:
17
#10000000
18
07
#11000000
1.
12
19
08
#12000000
0.
02
1:
09
#13000000
00
15
0:
17
#14000000
18
07
#15000000
19
08
#16000000
1.
14
1:
09
#17000000
